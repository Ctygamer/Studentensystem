on:
  push:
    branches:
      - ci-cd
      - main
      - postgresDB

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Update Frontend Dependencies
        run: |
          cd studentfrontend
          npm install # oder npm update
      - name: Lint Frontend
        run: |
          cd studentfrontend
          npm run lint
      # Füge hier einen ESLint-Schritt hinzu, um Frontend-Code zu überprüfen
      # Beispiel:
      # - name: Run ESLint
      #   run: |
      #     cd studentfrontend
      #     npm run eslint

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 21 for Maven Build
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Build Backend with Maven (Skip Tests)
        run: |
          cd studentsystem
          mvn clean package -DskipTests -DskipITs
      - name: Build Chat with Maven (Skip Tests)
        run: |
          cd chat
          mvn clean package -DskipTests -DskipITs
      - name: Build Docker images
        run: |
          docker build -t backend-image ./studentsystem
          docker build -t frontend-image ./studentfrontend
          docker build -t chat-image ./chat
      - name: Docker login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker images to GitHub Container Registry
        run: |
          docker tag backend-image ghcr.io/ctygamer/studentensystem/backend-image:latest
          docker push ghcr.io/ctygamer/studentensystem/backend-image:latest
          docker tag frontend-image ghcr.io/ctygamer/studentensystem/frontend-image:latest
          docker push ghcr.io/ctygamer/studentensystem/frontend-image:latest
          docker tag chat-image ghcr.io/ctygamer/studentensystem/chat-image:latest
          docker push ghcr.io/ctygamer/studentensystem/chat-image:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Deploy Backend to Render
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/<your-backend-service-id>/deploy"
          method: 'POST'
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}", "Content-Type": "application/json"}'
          data: '{"clearCache": "clear"}'
      - name: Deploy Frontend to Render
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/<your-frontend-service-id>/deploy"
          method: 'POST'
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}", "Content-Type": "application/json"}'
          data: '{"clearCache": "clear"}'
      - name: Deploy Chat to Render
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/<your-chat-service-id>/deploy"
          method: 'POST'
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}", "Content-Type": "application/json"}'
          data: '{"clearCache": "clear"}'
