name: CI/CD Pipeline

on:
  push:
    branches:
      - ci-cd
      - main
      - postgresDB

permissions:
  contents: read
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Frontend Dependencies
        working-directory: ./studentfrontend
        run: npm ci
      - name: Lint Frontend
        working-directory: ./studentfrontend
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build Backend with Maven
        run: |
          cd studentsystem
          mvn clean package -DskipTests
      - name: Build Chat with Maven
        run: |
          cd chat
          mvn clean package -DskipTests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./studentsystem
          push: true
          tags: ghcr.io/ctygamer/studentensystem/backend-image:latest
      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./studentfrontend
          push: true
          tags: ghcr.io/ctygamer/studentensystem/frontend-image:latest
      - name: Build and push Chat Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./chat
          push: true
          tags: ghcr.io/ctygamer/studentensystem/chat-image:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Deploy Backend to Render
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/${{ secrets.BACKEND_SERVICE_ID }}/deploy"
          method: 'POST'
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}", "Content-Type": "application/json"}'
          data: '{"clearCache": "clear"}'
      - name: Deploy Frontend to Render
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/${{ secrets.FRONTEND_SERVICE_ID }}/deploy"
          method: 'POST'
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}", "Content-Type": "application/json"}'
          data: '{"clearCache": "clear"}'
      - name: Deploy Chat to Render
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/${{ secrets.CHAT_SERVICE_ID }}/deploy"
          method: 'POST'
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}", "Content-Type": "application/json"}'
          data: '{"clearCache": "clear"}'
