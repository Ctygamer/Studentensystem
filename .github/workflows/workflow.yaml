name: CI/CD Pipeline

on:
  push:
    branches: [ci-cd, main, postgresDB]

# CRITICAL FIX: Berechtigungen für GHCR hinzufügen
permissions:
  contents: read
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install Frontend Dependencies
        working-directory: ./studentfrontend
        run: npm ci
          
      - name: Lint Frontend
        working-directory: ./studentfrontend
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      image-tag: ${{ steps.get_tag.outputs.tag }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
      
      - name: Build Backend
        working-directory: ./studentsystem
        run: mvn clean package -DskipTests
      
      - name: Build Docker Images
        run: |
          docker build -t ghcr.io/ctygamer/studentensystem/backend-image:latest ./studentsystem
          docker build -t ghcr.io/ctygamer/studentensystem/frontend-image:latest ./studentfrontend
          docker build -t ghcr.io/ctygamer/studentensystem/chat-image:latest ./chat
      
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push Images
        run: |
          docker push ghcr.io/ctygamer/studentensystem/backend-image:latest
          docker push ghcr.io/ctygamer/studentensystem/frontend-image:latest
          docker push ghcr.io/ctygamer/studentensystem/chat-image:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger Deployments
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/${{ secrets.BACKEND_SERVICE_ID }}/deploy"
          method: POST
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}"}'

