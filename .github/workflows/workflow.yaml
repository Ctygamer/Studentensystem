name: CI/CD Pipeline

on:
  push:
    branches:
      - ci-cd
      - main
      - postgresDB

permissions:
  contents: read
  packages: write

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true
  GH_TOKEN: ${{ secrets.PAT_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Frontend Dependencies
        working-directory: ./studentfrontend
        run: npm ci
      - name: Lint Frontend
        working-directory: ./studentfrontend
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 21 for Build
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build Backend with Maven (Skip Tests)
        run: |
          cd studentsystem || exit 1
          mvn clean package -DskipTests || exit 1
      - name: Build Chat with Maven (Skip Tests)
        run: |
          cd chat || exit 1
          mvn clean package -DskipTests || exit 1

  integration-test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21 for Tests
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Integrationstests für Backend-Service (studentsystem)
      - name: Run Integration Tests for Backend Service (studentsystem)
        run: |
          cd studentsystem || exit 1 
          mvn verify -Dtest=*IT -DfailIfNoTests=false || exit 1

      # Integrationstests für Chat-Service (chat)
      - name: Run Integration Tests for Chat Service (chat)
        run: |
          cd chat || exit 1 
          mvn verify -Dtest=*IT -DfailIfNoTests=false || exit 1

      # Testergebnisse hochladen und veröffentlichen
      - name: Upload Test Results for Backend and Chat Services (if any)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-results-backend-chat-services
          path: |
            - studentsystem/target/failsafe-reports/**/*.xml 
            - chat/target/failsafe-reports/**/*.xml

      - name: Publish Test Results for Backend and Chat Services (if any)
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2.5.0 
        with:
          files: |
            - studentsystem/target/failsafe-reports/**/*.xml 
            - chat/target/failsafe-reports/**/*.xml

