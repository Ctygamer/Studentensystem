name: CI/CD Pipeline

on:
  push:
    branches:
      - ci-cd
      - main
      - postgressDB

permissions:
  contents: read
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Frontend Dependencies
        working-directory: ./studentfrontend
        run: npm ci
      - name: Lint Frontend
        working-directory: ./studentfrontend
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build Backend with Maven (Skip Tests)
        run: |
          cd studentsystem
          mvn clean package -DskipTests
      - name: Build Chat with Maven (Skip Tests)
        run: |
          cd chat
          mvn clean package -DskipTests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./studentsystem
          push: true
          tags: ghcr.io/ctygamer/studentensystem/backend-image:latest
      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./studentfrontend
          push: true
          tags: ghcr.io/ctygamer/studentensystem/frontend-image:latest
      - name: Build and push Chat Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./chat
          push: true
          tags: ghcr.io/ctygamer/studentensystem/chat-image:latest

  integration-test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21 for Tests
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Integrationstests für das Backend (studentsystem)
      - name: Run Integration Tests for Backend Service (studentsystem)
        run: |
          cd studentsystem || exit 1 # Sicherstellen, dass der Pfad existiert.
          mvn verify -Dtest=*IT -DfailIfNoTests=false || exit 1

      # Integrationstests für den Chat-Service (chat)
      - name: Run Integration Tests for Chat Service (chat)
        run: |
          cd chat || exit 1 # Sicherstellen, dass der Pfad existiert.
          mvn verify -Dtest=*IT -DfailIfNoTests=false || exit 1

      # Testergebnisse hochladen (Backend und Chat Services)
      - name: Upload Test Results for Backend and Chat Services (if any)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-results-backend-chat-services
          path:
            - studentsystem/target/failsafe-reports/**/*.xml 
            - chat/target/failsafe-reports/**/*.xml

      # Testergebnisse veröffentlichen (Backend und Chat Services)
      - name: Publish Test Results for Backend and Chat Services (if any)
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2.5.0 # Veröffentlicht Testergebnisse in der GitHub-Oberfläche.
        with:
          files:
            - studentsystem/target/failsafe-reports/**/*.xml 
            - chat/target/failsafe-reports/**/*.xml

