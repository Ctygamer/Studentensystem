on:
  push:
    branches:
      - ci-cd
      - main
      - postgresDB  # Korrigierte Schreibweise (falls beabsichtigt)
 jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Update Frontend Dependencies
        run: |
          cd studentfrontend
          npm install # oder npm update
      - name: Lint Frontend
        run: |
          cd studentfrontend
          npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Update Frontend Dependencies
        run: |
          cd studentfrontend
          npm install # oder npm update
      - name: Test Frontend
        run: |
          cd studentfrontend
          npm test
  integration-test:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Maven Package
        run: |
          cd studentsystem
          mvn package -DskipTests
      - name: Run Integration Tests
        run: |
          cd studentsystem
          mvn verify -Pintegration-test
  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Docker images
        run: |
          docker build -t backend-image ./studentsystem
          docker build -t frontend-image ./studentfrontend
          docker build -t chat-image ./chat
      - name: Docker login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker images to GitHub Container Registry
        run: |
          docker tag backend-image ghcr.io/${{ github.repository }}/backend-image:latest
          docker push ghcr.io/${{ github.repository }}/backend-image:latest
          docker tag frontend-image ghcr.io/${{ github.repository }}/frontend-image:latest
          docker push ghcr.io/${{ github.repository }}/frontend-image:latest
          docker tag chat-image ghcr.io/${{ github.repository }}/chat-image:latest
          docker push ghcr.io/${{ github.repository }}/chat-image:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [build] # Korrekt hinzugef√ºgt
    steps:
      - name: Deploy Backend to Render
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/<your-backend-service-id>/deploy"
          method: 'POST'
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}", "Content-Type": "application/json"}'
          data: '{"clearCache": "clear"}'
      - name: Deploy Frontend to Render
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/<your-frontend-service-id>/deploy"
          method: 'POST'
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}", "Content-Type": "application/json"}'
          data: '{"clearCache": "clear"}'
      - name: Deploy Chat to Render
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/<your-chat-service-id>/deploy"
          method: 'POST'
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}", "Content-Type": "application/json"}'
          data: '{"clearCache": "clear"}'
