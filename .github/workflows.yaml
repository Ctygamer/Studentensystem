name: CI/CD Pipeline

on:
  push:
    branches:
      - ci-cd # FÃ¼hrt die Pipeline nur im ci-cd-Branch aus

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Lint Frontend
        run: |
          cd studentfrontend
          npm install
          npm run lint # Assuming you have a lint script

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Test Frontend
        run: |
          cd studentfrontend
          npm install
          npm test
      - name: Test Backend
        run: |
          cd studentsystem
          mvn test
      - name: Test Chat
        run: |
          cd chat
          mvn test

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Docker images
        run: |
          docker build -t backend-image ./studentsystem
          docker build -t frontend-image ./studentfrontend
          docker build -t chat-image ./chat
      - name: Docker login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker images to GitHub Container Registry
        run: |
          docker tag backend-image ghcr.io/${{ github.repository }}/backend-image:latest
          docker push ghcr.io/${{ github.repository }}/backend-image:latest
          docker tag frontend-image ghcr.io/${{ github.repository }}/frontend-image:latest
          docker push ghcr.io/${{ github.repository }}/frontend-image:latest
          docker tag chat-image ghcr.io/${{ github.repository }}/chat-image:latest
          docker push ghcr.io/${{ github.repository }}/chat-image:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Deploy to Render
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://api.render.com/v1/services/<your-render-service-id>/deploy"
          method: 'POST'
          headers: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}", "Content-Type": "application/json"}'
          data: '{"clearCache": "clear"}'